/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Screens;
import xml.Reservations;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import xml.Dish;
import xml.Order;
import xml.OrderDish;
import xml.Orders;
import xml.Restaurant;
import xml.Table;

/**
 *
 * @author LENOVO
 */
public class ClientForm2 extends javax.swing.JFrame {
//List<Appetizers> appetizers; 

    Restaurant restaurant;
    Reservations reservation;
    List<Dish> dishesList;
    List<Table> tablesList;
    int reservedTableNumber;
    double totalPriceTax;
    double totalPrice;
    String customerName;
    List<OrderDish> ordersArr = new ArrayList<>();
    List<Dish> dishesArr = new ArrayList<>();


    /**
     * Creates new form clientForm2
     */
    public ClientForm2(Restaurant restaurant, int reservedTableNumber, String customerName) throws JAXBException {
        initComponents();
        this.restaurant = restaurant;
        this.dishesList=restaurant.getDishes().getDishes();
        this.tablesList = restaurant.getTables().getTables();
        this.reservedTableNumber = reservedTableNumber;
        this.customerName = customerName;
        readOrdersXML();

    }

    private void readXML() throws JAXBException {
        JAXBContext jaxbcontext = JAXBContext.newInstance(Restaurant.class);
        Unmarshaller u = jaxbcontext.createUnmarshaller();
        restaurant = (Restaurant) u.unmarshal(new File("data.xml"));
    }
    private void readOrdersXML() throws JAXBException {
        JAXBContext jaxbcontext = JAXBContext.newInstance(Reservations.class);
        Unmarshaller u = jaxbcontext.createUnmarshaller();
        reservation = (Reservations) u.unmarshal(new File("Orders.xml"));
    }

    private void saveXMLdishes() throws JAXBException {
        JAXBContext jaxbcontext = JAXBContext.newInstance(Reservations.class);
        Marshaller u = jaxbcontext.createMarshaller();
        u.marshal(reservation, new File("Orders.xml"));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu_label = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        maincourse_box = new javax.swing.JComboBox<>();
        appetizers_box = new javax.swing.JComboBox<>();
        desserts_box = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        checkout_button = new javax.swing.JButton();
        aq_field = new javax.swing.JTextField();
        dq_textfield = new javax.swing.JTextField();
        mq_textfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        addappetizer_button = new javax.swing.JButton();
        addmaincourses_button = new javax.swing.JButton();
        adddesserts_button = new javax.swing.JButton();
        checkout_label = new javax.swing.JLabel();
        logout_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menu_label.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        menu_label.setForeground(new java.awt.Color(51, 0, 255));
        menu_label.setText("Menu");

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 204));
        jLabel2.setText("Main course");

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 204));
        jLabel3.setText("Appetizers");

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 204));
        jLabel4.setText("Desserts");

        maincourse_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Grilled Chicken", "Mushroom Soup", "Beef Steak" }));

        appetizers_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Greek Salade", "Fried Potatos" }));

        desserts_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apple Pie", "Molten Cake" }));

        jLabel1.setFont(new java.awt.Font("Segoe Print", 2, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 255));
        jLabel1.setText("Please choose what you like from our delicious plates:");

        checkout_button.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkout_button.setForeground(new java.awt.Color(51, 0, 204));
        checkout_button.setText("Checkout");
        checkout_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkout_buttonActionPerformed(evt);
            }
        });

        aq_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aq_fieldActionPerformed(evt);
            }
        });

        dq_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dq_textfieldActionPerformed(evt);
            }
        });

        mq_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mq_textfieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 204));
        jLabel5.setText("Quantity");

        addappetizer_button.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        addappetizer_button.setForeground(new java.awt.Color(51, 0, 204));
        addappetizer_button.setText("Add");
        addappetizer_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addappetizer_buttonActionPerformed(evt);
            }
        });

        addmaincourses_button.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        addmaincourses_button.setForeground(new java.awt.Color(51, 0, 204));
        addmaincourses_button.setText("Add");
        addmaincourses_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addmaincourses_buttonActionPerformed(evt);
            }
        });

        adddesserts_button.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        adddesserts_button.setForeground(new java.awt.Color(51, 0, 204));
        adddesserts_button.setText("Add");
        adddesserts_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adddesserts_buttonActionPerformed(evt);
            }
        });

        checkout_label.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N

        logout_button.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        logout_button.setForeground(new java.awt.Color(51, 0, 204));
        logout_button.setText("Logout");
        logout_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(menu_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(checkout_label, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(checkout_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(logout_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(desserts_box, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dq_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(adddesserts_button))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(appetizers_box, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(maincourse_box, javax.swing.GroupLayout.Alignment.LEADING, 0, 244, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mq_textfield)
                            .addComponent(aq_field, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addappetizer_button)
                            .addComponent(addmaincourses_button)))
                    .addComponent(jLabel1)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menu_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aq_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addappetizer_button)
                    .addComponent(appetizers_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maincourse_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mq_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addmaincourses_button))
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(desserts_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dq_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adddesserts_button))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(checkout_button)
                        .addGap(18, 18, 18)
                        .addComponent(logout_button))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(checkout_label, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkout_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkout_buttonActionPerformed
        if(ordersArr.size()==0){
            JOptionPane.showMessageDialog(rootPane, "Oops! You didn't order any dish!");
        }
        else{
        Order order = new Order();
        order.setCustomerName(customerName);
        order.setTableNumber(reservedTableNumber);
        order.setDishes(ordersArr);
        for (int i = 0; i < ordersArr.size(); i++) {
            int price = ordersArr.get(i).getPrice();
            if (ordersArr.get(i).getType().equals("appetizer")) {
                totalPriceTax += ((price + (price * 0.1))* ordersArr.get(i).getQuantity());
                totalPrice+=(price* ordersArr.get(i).getQuantity());
            } else if (ordersArr.get(i).getType().equals("main_course")) {
                totalPriceTax += ((price + (price * 0.15))* ordersArr.get(i).getQuantity());
                totalPrice+=(price* ordersArr.get(i).getQuantity());
            } else if (ordersArr.get(i).getType().equals("desert")) {
                totalPriceTax += ((price + (price * 0.2))* ordersArr.get(i).getQuantity());
                totalPrice+=(price* ordersArr.get(i).getQuantity());
            }
        }
            order.setOrderBill(totalPriceTax);
            
      
        if (reservation==null){
            reservation =new Reservations(); 
        }
        if(reservation.getOrders()==null)
        {
            Orders o=new Orders();
            ArrayList<Order> ol=new ArrayList<>();
            o.setOrder(ol);
            reservation.setOrders(o);
        }
                
        reservation.getOrders().getOrder().add(order);
        

        try {
            saveXMLdishes();
        } catch (JAXBException ex) {
            Logger.getLogger(ClientForm2.class.getName()).log(Level.SEVERE, null, ex);
        }
   
        

        
        checkout_label.setText("<HTML>" + "Your balance before taxes is : " + Math.round(totalPrice * 100.0) / 100.0 + "<br/>" +"Your total balance (after taxes) is : "+Math.round(totalPriceTax*100.0)/100.0 +"<HTML>");
        JOptionPane.showMessageDialog(rootPane, "Your order is confirmed");
        }
    }//GEN-LAST:event_checkout_buttonActionPerformed

    private void mq_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mq_textfieldActionPerformed

    }//GEN-LAST:event_mq_textfieldActionPerformed

    private void aq_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aq_fieldActionPerformed

    }//GEN-LAST:event_aq_fieldActionPerformed

    private void dq_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dq_textfieldActionPerformed

    }//GEN-LAST:event_dq_textfieldActionPerformed

    private void addappetizer_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addappetizer_buttonActionPerformed
        String appetizer = appetizers_box.getSelectedItem().toString();
        String aq = aq_field.getText();
        int appetizersQuantity;
        try {
            appetizersQuantity = Integer.parseInt(aq);
            if (appetizersQuantity < 0) {
                JOptionPane.showMessageDialog(rootPane, "Error! Please enter a positive value in appetizers quantity field.");
                return;
            } else {

                
                    for (int j = 0; j < dishesList.size(); j++) {
                        if (dishesList.get(j).getName().equals(appetizer)) {
                            OrderDish dish = new OrderDish();
                            dish.setName(dishesList.get(j).getName());
                            dish.setPrice(dishesList.get(j).getPrice());
                            dish.setType(dishesList.get(j).getType());
                            dish.setQuantity(appetizersQuantity);
                            ordersArr.add(dish);
                        }
                    }
               
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error! Please enter a digit in appetizers quantity field.");
        }


    }//GEN-LAST:event_addappetizer_buttonActionPerformed

    private void logout_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_buttonActionPerformed
       Login LForm;
        try {
            LForm = new Login();
             LForm.setVisible(true);
             this.setVisible(false);
        } catch (JAXBException ex) {
            Logger.getLogger(ClientForm2.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_logout_buttonActionPerformed

    private void addmaincourses_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addmaincourses_buttonActionPerformed
        String mainCourses = maincourse_box.getSelectedItem().toString();
        String mq = mq_textfield.getText();
        int mainCoursesQuantity;
        try {
            mainCoursesQuantity = Integer.parseInt(mq);
            if (mainCoursesQuantity < 0) {
                JOptionPane.showMessageDialog(rootPane, "Error! Please enter a positive value in main courses quantity field.");
                return;
            } else {

                
                    for (int j = 0; j < dishesList.size(); j++) {
                        if (dishesList.get(j).getName().equals(mainCourses)) {
                            OrderDish dish = new OrderDish();
                            dish.setName(dishesList.get(j).getName());
                            dish.setPrice(dishesList.get(j).getPrice());
                            dish.setType(dishesList.get(j).getType());
                            dish.setQuantity(mainCoursesQuantity);
                            ordersArr.add(dish);
                        }
                    }
                
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error! Please enter a digit in main courses quantity field.");
        }


    }//GEN-LAST:event_addmaincourses_buttonActionPerformed

    private void adddesserts_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adddesserts_buttonActionPerformed
        String dessert = desserts_box.getSelectedItem().toString();
        String dq = dq_textfield.getText();
        int dessertsQuantity;
        try {
            dessertsQuantity = Integer.parseInt(dq);
            if (dessertsQuantity < 0) {
                JOptionPane.showMessageDialog(rootPane, "Error! Please enter a positive value in desserts quantity field.");
                return;
            } else {

                
                    for (int j = 0; j < dishesList.size(); j++) {
                        if (dishesList.get(j).getName().equals(dessert)) {
                            OrderDish dish = new OrderDish();
                            dish.setName(dishesList.get(j).getName());
                            dish.setPrice(dishesList.get(j).getPrice());
                            dish.setType(dishesList.get(j).getType());
                            dish.setQuantity(dessertsQuantity);
                            ordersArr.add(dish);
                        }
                    }
                
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error! Please enter a digit in desserts quantity field.");
        }
    }//GEN-LAST:event_adddesserts_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addappetizer_button;
    private javax.swing.JButton adddesserts_button;
    private javax.swing.JButton addmaincourses_button;
    private javax.swing.JComboBox<String> appetizers_box;
    private javax.swing.JTextField aq_field;
    private javax.swing.JButton checkout_button;
    private javax.swing.JLabel checkout_label;
    private javax.swing.JComboBox<String> desserts_box;
    private javax.swing.JTextField dq_textfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton logout_button;
    private javax.swing.JComboBox<String> maincourse_box;
    private javax.swing.JLabel menu_label;
    private javax.swing.JTextField mq_textfield;
    // End of variables declaration//GEN-END:variables
}
